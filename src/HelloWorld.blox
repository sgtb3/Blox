
/* testing global var declar */
int y;
int z;

/* testing global frame declaration */
Frame<1,1,1> one;
Frame<1,1,1> two;

/* testing global var assignment */
int z1 = y;

/* z1 = y     (no type) variable assignment = doesn't work - but it should */

/* testing global frame assignment - printing correctly */
Frame C = one;
Frame D = C;


int main()
{
	/* test function call - not working */
	/* test_function(); */

	/* test binary operator - not working */
	/* int a = 1 + 2; */

	/* test local var declar */
	int x;
	bool t;
	

	/* int[] x; */

	/* this should not be accepted - catch this in the analyzer */ 
	void i; 

	/* test declaration and assignment */
	bool t = true; 
	bool f = false;

	
	/* test continue */
	continue;
	
	/* test break */
	break;

	int i;
	for (i = 0; i < 10; i = i + 1) {
		if (a < b + 1) {
			return;
		}
		return;
	}

	while (i < 10) {
		if (a < b + 1) {
			return;
		}
		return;
	}

	/* Create basic frames to construct letters with */
	Frame<1,1,1> one;
	Frame<2,1,1> twox;
	Frame<1,5,1> fivey;
	Frame<46,5,1> base;

	/* testing frame assign and frame assign list */
	Frame H = fivey;
	Frame I = one;

	Face<1,2,3,E> a;
	Face<1,1,1,W> b;

	/* testing joins and joins list */
	Join(H, a, twox, b);
	Join(H, a, fivey, b);
	
	Build(H, c, I, d);
	/* testing print */
	print base;	
}
