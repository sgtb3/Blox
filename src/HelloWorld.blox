
/* testing global var declar */
int y;
int z;

/* testing global frame declaration */
Frame<1,1,1> one;
Frame<1,1,1> two;

/* testing global var assignment */
int z1 = y;

/* z1 = y     (no type) variable assignment = doesn't work - but it should */

/* testing global frame assignment - printing correctly */
Frame C = one;
Frame D = C;


int main()
{
	/* test function call - not working */
	/* test_function(); */

	/* test binary operator - not working */
	/* int a = 1 + 2; */

	/* test local var declar */
	int x;
	bool t;
	

	/* int[] x; */

	/* this should not be accepted - catch this in the analyzer */ 
	void i; 

	/* test declaration and assignment */
	/* bool t = true; */
	/* bool f = false; */

	/* test Map creation */
	/* Map<Frame, Frame> map; */
	
	/* test continue */
	continue;
	
	/* test break */
	break;

	/* Create basic frames to construct letters with */
	Frame<1,1,1> one;
	Frame<2,1,1> twox;
	Frame<1,5,1> fivey;
	Frame<46,5,1> base;

	/* testing frame assign and frame assign list */
	Frame H = fivey;
	Frame I = one;

	/* testing joins and joins list */
	Join(H, {(1,3,1,E)}, twox, {(1,1,1,W)});
	Join(H, {(3,3,1,E)}, fivey, {(1,3,1,W)});
	
	/* testing print */
	print base;	
}
