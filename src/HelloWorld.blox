	
	Frame<1,1,5> fives;
	Frame<2,1,1> twos;
	Frame<3,1,5> threes;

	Set<Frame> fives;
	Set<Frame> twos;
	Set<Frame> threes;

	for (int i = 0; i < 14; i++) {
		Frame A = fives;
		legs.add(A);
	}
	
	for (int i = 0; i < 14; i++) {
		Frame B = twos;
		legs.add(B);
	}

	for (int i = 0; i < 14; i++) {
		Frame C = threes;
		legs.add(C);
	}

	/*
		For reference -
		Definition:
			Join(Frame A, int[] A_coord, String A_face, Frame B, int[] B_coord, String B_face)

			Join(Frame A, [Set of optional Faces to Join on in A], Frame B, [Set of optional Faces to Join on in B] )
			Join takes two frames and the set of faces (1,1,1,E) (rules) that the join can take place on, this relationship can be one to one, or many to many.

		Example:
			Join(A, coord(1, 1, 2), "E", B, coord(1, 1, 1), "W");
	*/ 
	
	Set<Rule> rules;

	Rule H = {
		fives[0](1,1,3,E) -> twos[0](1,1,1,W);
		fives[1]())
	}

	Rule E = ();
	Rule L = ();
	Rule L = ();
	Rule O = ();
	Rule W = ();
	Rule O = ();
	Rule R = ();
	Rule L = ();
	Rule D = ();
	
	rules.add(H);
	rules.add(E);
	rules.add(L);
	rules.add(L);
	rules.add(O);
	rules.add(W);
	rules.add(O);
	rules.add(R);
	rules.add(L);
	rules.add(D);

	Build(rules)






