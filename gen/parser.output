   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls vdecl

   4  formals_opt :
   5              | formal_list

   6  formal_list : typ ID
   7              | formal_list COMMA typ ID

   8  typ : INT
   9      | BOOL
  10      | FRAME

  11  typedef_list : typedef
  12               | typedef_list COMMA typedef

  13  typedef_list_opt :
  14                   | typedef_list

  15  typedef : ID
  16          | ID LTN typedef_list_opt GTN

  17  expr_list_set :
  18                | expr_true_list_set

  19  expr_true_list_set : expr
  20                     | expr_true_list_set COMMA expr

  21  actuals_opt :
  22              | actuals_list

  23  actuals_list : expr
  24               | actuals_list COMMA expr

  25  set : SET LPAREN expr_list_set RPAREN

  26  arr : LBRACK expr_list_set RBRACK

  27  vdecl_list :
  28             | vdecl_list vdecl

  29  vdecl : typ ID SEMI

  30  stmt_list :
  31            | stmt_true_list

  32  stmt_true_list : stmt SEMI
  33                 | stmt SEMI stmt_true_list

  34  stmt : expr SEMI
  35       | LBRACE stmt_list RBRACE
  36       | IF LPAREN expr RPAREN stmt
  37       | IF LPAREN expr RPAREN stmt ELSE stmt
  38       | FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt

  39  expr_opt :
  40           | expr

  41  expr : LITERAL
  42       | ID
  43       | TRUE
  44       | FALSE
  45       | set
  46       | arr
  47       | expr PLUS expr
  48       | expr MINUS expr
  49       | expr TIMES expr
  50       | expr DIVIDE expr
  51       | expr EQ expr
  52       | expr NEQ expr
  53       | expr LT expr
  54       | expr LEQ expr
  55       | expr GT expr
  56       | expr GEQ expr
  57       | expr FRAMEEQ expr
  58       | expr AND expr
  59       | expr OR expr
  60       | MINUS expr
  61       | NOT expr
  62       | ID ASSIGN expr
  63       | ID LPAREN actuals_opt RPAREN
  64       | LPAREN expr RPAREN

  65  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (65)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (65)

	.  reduce 65


state 4
	program : decls . EOF  (1)
	decls : decls . vdecl  (3)

	INT  shift 5
	BOOL  shift 6
	FRAME  shift 7
	EOF  shift 8
	.  error

	vdecl  goto 9
	typ  goto 10


state 5
	typ : INT .  (8)

	.  reduce 8


state 6
	typ : BOOL .  (9)

	.  reduce 9


state 7
	typ : FRAME .  (10)

	.  reduce 10


state 8
	program : decls EOF .  (1)

	.  reduce 1


state 9
	decls : decls vdecl .  (3)

	.  reduce 3


state 10
	vdecl : typ . ID SEMI  (29)

	ID  shift 11
	.  error


state 11
	vdecl : typ ID . SEMI  (29)

	SEMI  shift 12
	.  error


state 12
	vdecl : typ ID SEMI .  (29)

	.  reduce 29


Rules never reduced:
	formals_opt :  (4)
	formals_opt : formal_list  (5)
	formal_list : typ ID  (6)
	formal_list : formal_list COMMA typ ID  (7)
	typedef_list : typedef  (11)
	typedef_list : typedef_list COMMA typedef  (12)
	typedef_list_opt :  (13)
	typedef_list_opt : typedef_list  (14)
	typedef : ID  (15)
	typedef : ID LTN typedef_list_opt GTN  (16)
	expr_list_set :  (17)
	expr_list_set : expr_true_list_set  (18)
	expr_true_list_set : expr  (19)
	expr_true_list_set : expr_true_list_set COMMA expr  (20)
	actuals_opt :  (21)
	actuals_opt : actuals_list  (22)
	actuals_list : expr  (23)
	actuals_list : actuals_list COMMA expr  (24)
	set : SET LPAREN expr_list_set RPAREN  (25)
	arr : LBRACK expr_list_set RBRACK  (26)
	vdecl_list :  (27)
	vdecl_list : vdecl_list vdecl  (28)
	stmt_list :  (30)
	stmt_list : stmt_true_list  (31)
	stmt_true_list : stmt SEMI  (32)
	stmt_true_list : stmt SEMI stmt_true_list  (33)
	stmt : expr SEMI  (34)
	stmt : LBRACE stmt_list RBRACE  (35)
	stmt : IF LPAREN expr RPAREN stmt  (36)
	stmt : IF LPAREN expr RPAREN stmt ELSE stmt  (37)
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt  (38)
	expr_opt :  (39)
	expr_opt : expr  (40)
	expr : LITERAL  (41)
	expr : ID  (42)
	expr : TRUE  (43)
	expr : FALSE  (44)
	expr : set  (45)
	expr : arr  (46)
	expr : expr PLUS expr  (47)
	expr : expr MINUS expr  (48)
	expr : expr TIMES expr  (49)
	expr : expr DIVIDE expr  (50)
	expr : expr EQ expr  (51)
	expr : expr NEQ expr  (52)
	expr : expr LT expr  (53)
	expr : expr LEQ expr  (54)
	expr : expr GT expr  (55)
	expr : expr GEQ expr  (56)
	expr : expr FRAMEEQ expr  (57)
	expr : expr AND expr  (58)
	expr : expr OR expr  (59)
	expr : MINUS expr  (60)
	expr : NOT expr  (61)
	expr : ID ASSIGN expr  (62)
	expr : ID LPAREN actuals_opt RPAREN  (63)
	expr : LPAREN expr RPAREN  (64)


48 terminals, 23 nonterminals
66 grammar rules, 13 states
