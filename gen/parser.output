   0  $accept : %entry% $end

   1  program : decls EOF

   2  decls :
   3        | decls vdecl

   4  formals_opt :
   5              | formal_list

   6  formal_list : typ ID
   7              | formal_list COMMA typ ID

   8  typ : INT
   9      | FRAME

  10  vdecl_list :
  11             | vdecl_list vdecl

  12  vdecl : typ ID SEMI

  13  expr : LITERAL
  14       | ID
  15       | ID ASSIGN expr
  16       | LPAREN expr RPAREN
  17       | JOIN ID ASSIGN expr

  18  expr_opt :
  19           | expr

  20  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (20)
	decls : .  (2)

	.  reduce 2

	program  goto 3
	decls  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (20)

	.  reduce 20


state 4
	program : decls . EOF  (1)
	decls : decls . vdecl  (3)

	INT  shift 5
	FRAME  shift 6
	EOF  shift 7
	.  error

	vdecl  goto 8
	typ  goto 9


state 5
	typ : INT .  (8)

	.  reduce 8


state 6
	typ : FRAME .  (9)

	.  reduce 9


state 7
	program : decls EOF .  (1)

	.  reduce 1


state 8
	decls : decls vdecl .  (3)

	.  reduce 3


state 9
	vdecl : typ . ID SEMI  (12)

	ID  shift 10
	.  error


state 10
	vdecl : typ ID . SEMI  (12)

	SEMI  shift 11
	.  error


state 11
	vdecl : typ ID SEMI .  (12)

	.  reduce 12


Rules never reduced:
	formals_opt :  (4)
	formals_opt : formal_list  (5)
	formal_list : typ ID  (6)
	formal_list : formal_list COMMA typ ID  (7)
	vdecl_list :  (10)
	vdecl_list : vdecl_list vdecl  (11)
	expr : LITERAL  (13)
	expr : ID  (14)
	expr : ID ASSIGN expr  (15)
	expr : LPAREN expr RPAREN  (16)
	expr : JOIN ID ASSIGN expr  (17)
	expr_opt :  (18)
	expr_opt : expr  (19)


17 terminals, 11 nonterminals
21 grammar rules, 12 states
